#!/usr/bin/env bash
set -o errexit -o nounset -o pipefail -o errtrace -o xtrace

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
source "$SCRIPT_DIR/common.sh"
setup_logging "/var/log/wbor-ups/offbattery.log"

###############################################################################
# offbattery
#
# Called by apcupsd when UPS returns to mains power.
# Cancels pending fifteen job, then sends alerts.
###############################################################################

source "$SCRIPT_DIR/discord_embed.sh"
source "$SCRIPT_DIR/groupme.sh"

# Ensure run directory
RUN_DIR=$(ensure_dir_or_tmp "/var/run/wbor-ups")
PID_FILE="$RUN_DIR/fifteen.pid"

: "${SYSADMIN:?Need SYSADMIN}" "${APCUPSD_MAIL:?Need APCUPSD_MAIL}"
: "${GROUPME_API_URL:?Need GROUPME_API_URL}"
: "${MGMT_BOT_ID:?Need MGMT_BOT_ID}" "${CLUBWIDE_BOT_ID:?Need CLUBWIDE_BOT_ID}"

HOSTNAME="$(hostname)"
MSG_TITLE="$HOSTNAME UPS - Power Restored"

# Cancel pending follow-up
cancel_fifteen "$RUN_DIR"

# Email
send_email "UPS: $UPSNAME - Power Restored" \
    "Power is back to mains."

MSG="Power (appears to be) back in the broadcast booth!"

# GroupMe - Management and Clubwide
groupme_mgmt "$MSG"
groupme_club "$MSG"

# Discord embed
fields='[{"name":"UPS","value":"'"$UPSNAME"'","inline":true},{"name":"Host","value":"'"$HOSTNAME"'","inline":true}]'
send_discord_embed "Station Power Restored" "Broadcast booth appears to have returned to mains power." "$fields"

exit 0
